<!DOCTYPE html>
<!-- saved from url=(0090)http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/ -->
<html lang="en"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<title>Automating Eclipse Jubula Tests with Jenkins | Development Notes</title>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="stylesheet" type="text/css" media="all" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/style.css">
<link rel="pingback" href="http://devnotesblog.wordpress.com/xmlrpc.php">
<meta name="google-site-verification" content="5pJNhNrWCO2bD4wOyuTLc_85IRU9sGn8CV5frpblHWE">
<link rel="alternate" type="application/rss+xml" title="Development Notes » Feed" href="http://devnotesblog.wordpress.com/feed/">
<link rel="alternate" type="application/rss+xml" title="Development Notes » Comments Feed" href="http://devnotesblog.wordpress.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="Development Notes » Automating Eclipse Jubula Tests with Jenkins Comments Feed" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/feed/">
<script type="text/javascript" async="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/wl"></script><script type="text/javascript">
/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script>
<link rel="stylesheet" id="all-css-0" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/saved_resource" type="text/css" media="all">
<script type="text/javascript">
/* <![CDATA[ */
var LoggedOutFollow = {"invalid_email":"Your subscription did not succeed, please try again with a valid email address."};
/* ]]> */
</script>
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/saved_resource(1)"></script>
<link rel="stylesheet" id="all-css-0" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/style(1).css" type="text/css" media="all">
<!--[if lt IE 8]>
<link rel='stylesheet' id='highlander-comments-ie7-css'  href='http://s2.wp.com/wp-content/mu-plugins/highlander-comments/style-ie7.css?m=1351637563g&#038;ver=20110606' type='text/css' media='all' />
<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://devnotesblog.wordpress.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://devnotesblog.wordpress.com/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="Masquerade Service Simulator 0.9.1" href="http://devnotesblog.wordpress.com/2011/05/31/masquerade-service-simulator-0-9-1/">
<link rel="next" title="Eclipse Jubula Automated Test Ant File" href="http://devnotesblog.wordpress.com/2011/07/14/eclipse-jubula-automated-test-ant-file/">
<meta name="generator" content="WordPress.com">
<link rel="canonical" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/Automating Eclipse Jubula Tests with Jenkins   Development Notes.htm">
<link rel="shortlink" href="http://wp.me/p1qmeU-1T">
<link rel="alternate" type="application/json+oembed" href="https://public-api.wordpress.com/oembed/1.0/?format=json&url=http%3A%2F%2Fdevnotesblog.wordpress.com%2F2011%2F06%2F14%2Fautomating-eclipse-jubula-tests-with-jenkins%2F&for=wpcom-auto-discovery"><link rel="alternate" type="application/xml+oembed" href="https://public-api.wordpress.com/oembed/1.0/?format=xml&url=http%3A%2F%2Fdevnotesblog.wordpress.com%2F2011%2F06%2F14%2Fautomating-eclipse-jubula-tests-with-jenkins%2F&for=wpcom-auto-discovery">
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article">
<meta property="og:title" content="Automating Eclipse Jubula Tests with Jenkins">
<meta property="og:url" content="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/">
<meta property="og:description" content="Eclipse Jubula is a pretty new addition to the Eclipse universe. It&#39;s a functional UI testing tool that allows you to specify and run tests. The tests are not code-based but can be assembled from a...">
<meta property="article:published_time" content="2011-06-14T15:50:50+00:00">
<meta property="article:modified_time" content="2011-07-14T12:14:07+00:00">
<meta property="article:author" content="http://devnotesblog.wordpress.com/author/mfritschi/">
<meta property="og:site_name" content="Development Notes">
<meta property="og:image" content="http://devnotesblog.files.wordpress.com/2011/06/jubula-jobconfig1.png">
<meta property="og:image" content="http://devnotesblog.files.wordpress.com/2011/06/jubula-report.png">
<meta property="og:image" content="http://devnotesblog.files.wordpress.com/2011/06/jubula-results.png">
<meta name="twitter:site" content="@wordpressdotcom">
<meta name="twitter:image" content="http://devnotesblog.files.wordpress.com/2011/06/jubula-logo.png?w=240">
<meta name="twitter:card" content="summary">
<meta property="fb:app_id" content="249643311490">
<meta property="article:publisher" content="https://www.facebook.com/WordPresscom">
<link rel="shortcut icon" type="image/x-icon" href="http://s2.wp.com/i/favicon.ico?m=1311975824g" sizes="16x16 24x24 32x32 48x48">
<link rel="icon" type="image/x-icon" href="http://s2.wp.com/i/favicon.ico?m=1311975824g" sizes="16x16 24x24 32x32 48x48">
<link rel="apple-touch-icon-precomposed" href="http://s0.wp.com/i/webclip.png?m=1391188133g">
<link rel="openid.server" href="http://devnotesblog.wordpress.com/?openidserver=1">
<link rel="openid.delegate" href="http://devnotesblog.wordpress.com/">
<link rel="search" type="application/opensearchdescription+xml" href="http://devnotesblog.wordpress.com/osd.xml" title="Development Notes">
<link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com">
<meta name="application-name" content="Development Notes"><meta name="msapplication-window" content="width=device-width;height=device-height"><meta name="msapplication-tooltip" content="Bits and pieces concerning software development"><meta name="msapplication-task" content="name=Subscribe;action-uri=http://devnotesblog.wordpress.com/feed/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="title" content="Automating Eclipse Jubula Tests with Jenkins | Development Notes on WordPress.com">
<meta name="description" content="Eclipse Jubula is a pretty new addition to the Eclipse universe. It&#39;s a functional UI testing tool that allows you to specify and run tests. The tests are not code-based but can be assembled from available building blocks or recorded in the UI. While evaluating tools for doing functional tests for an Eclipse Plugin, I…">

<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/google_service.js">
</script>
<script type="text/javascript">
if ( typeof GS_googleAddAdSenseService == 'function' ) { GS_googleAddAdSenseService("ca-pub-3443918307802676"); }
if ( typeof GS_googleEnableAllServices == 'function' ) { GS_googleEnableAllServices() };
</script><script src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/google_ads.js"></script>
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/amzn_ads.js"></script>
<script type="text/javascript">
try { amznads.getAds("3033","300x250"); } catch(e) { /* ignore */ }
</script><script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/bid"></script>
<script type="text/javascript">
var amznKeys = amznads.getKeys();
if (typeof amznKeys != "undefined" && amznKeys != "") { for (var i =0; i < amznKeys.length; i++) { var key = amznKeys[i]; GA_googleAddAttr("amzn", key);} }
document.close();
</script>
<script type="text/javascript">
if ( typeof GA_googleAddSlot == 'function' ) { GA_googleAddSlot("ca-pub-3443918307802676", "wpcom_below_post"); }
</script>
<script type="text/javascript">
if ( typeof GA_googleFetchAds == 'function' ) { GA_googleFetchAds(); }
</script>

<script type="text/javascript">
var wpcom_ads = { bid: 21058356, pt: 'permalink', wa: 0, as: 0, domain: 'devnotesblog.wordpress.com', url: 'http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/', gid: '', };
</script>
<link rel="stylesheet" type="text/css" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/shCore.css"><link rel="stylesheet" type="text/css" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/shThemeDefault.css"><style type="text/css" id="syntaxhighlighteranchor"></style>
<script type="text/javascript">
	window.google_analytics_uacct = "UA-52447-2";
</script>

<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-52447-2']);
	_gaq.push(['_setDomainName', 'wordpress.com']);
	_gaq.push(['_initData']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
	})();
</script><script type="text/javascript" async="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ga.js"></script>
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/osd.js"></script><link rel="stylesheet" type="text/css" id="gravatar-card-css" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/hovercard.css"><link rel="stylesheet" type="text/css" id="gravatar-card-services-css" href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/services.css"></head>

<body class="single single-post postid-117 single-format-standard mp6 single-author highlander-enabled highlander-light" style="">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://devnotesblog.wordpress.com/" title="Development Notes" rel="home">Development Notes</a>
					</span>
				</div>
				<div id="site-description">Bits and pieces concerning software development</div>

										<a class="home-link" href="http://devnotesblog.wordpress.com/" title="Development Notes" rel="home">
							<img src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/cropped-usa-20100904_130206.jpg" width="940" height="198" alt="">
						</a>
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#content" title="Skip to content">Skip to content</a></div>
								<div class="menu"><ul><li><a href="http://devnotesblog.wordpress.com/">Home</a></li><li class="page_item page-item-2"><a href="http://devnotesblog.wordpress.com/about/">About</a></li></ul></div>
			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">

			

				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://devnotesblog.wordpress.com/2011/05/31/masquerade-service-simulator-0-9-1/" rel="prev"><span class="meta-nav">←</span> Masquerade Service Simulator&nbsp;0.9.1</a></div>
					<div class="nav-next"><a href="http://devnotesblog.wordpress.com/2011/07/14/eclipse-jubula-automated-test-ant-file/" rel="next">Eclipse Jubula Automated Test Ant&nbsp;File <span class="meta-nav">→</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-117" class="post-117 post type-post status-publish format-standard hentry category-eclipse category-java category-jenkins category-testing">
											<h2 class="entry-title"><a href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/Automating Eclipse Jubula Tests with Jenkins   Development Notes.htm" rel="bookmark">Automating Eclipse Jubula Tests with&nbsp;Jenkins</a></h2>					
					<div class="entry-meta">
													<span class="meta-prep meta-prep-author">Posted on</span> <a href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/Automating Eclipse Jubula Tests with Jenkins   Development Notes.htm" title="17:50" rel="bookmark"><span class="entry-date">2011/06/14</span></a>							<span class="by-author"><span class="sep">by</span> <span class="author vcard"><a class="url fn n" href="http://devnotesblog.wordpress.com/author/mfritschi/" title="View all posts by Matt" rel="author">Matt</a></span> </span>											</div><!-- .entry-meta -->

					<div class="entry-content">
						<p><a href="http://devnotesblog.files.wordpress.com/2011/06/jubula-logo.png"><img class="alignleft size-full wp-image-121" title="jubula-logo" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/jubula-logo.png" alt=""></a>Eclipse Jubula is a pretty new addition to the Eclipse universe. It’s a functional UI testing tool that allows you to specify and run tests. The tests are not code-based but can be assembled from available building blocks or recorded in the UI.</p>
<p>While evaluating tools for doing functional tests for an Eclipse Plugin, I wanted to check out how easy it would be to integrate it into our Continuous Integration builds with Jenkins (the CI server formerly known as Hudson). It turned out there were a few pitfalls, but in the end it was pretty straightforward – hopefully this article will save you some time.</p>
<p>To get started, download and install Jubula from the <a href="http://www.eclipse.org/jubula/download.php">download page</a>. After installation (simply run <code>setup.sh</code>, and install it for example into <code>/home/jenkins/jubula</code>), you’ll have to prepare your target RCP or Eclipse Runtime by extracting <code>rcp-support.zip</code> from the Jubula installation to the RCP Application/Eclipse directory. This contains a plugin that needs to be available in the AUT (Application Under Test) for Jubula to be able to run the tests.</p>
<p><em>Pitfall</em>: The provided Jubula installation package for Linux includes a 32-bit JRE and SWT in a 32-bit version that is used to run Jubula and its tools. The CI server being a 64-bit machine I had to install quite a few 32-bit shared libraries to get Jubula to run. To find out what libraries are missing, starting Jubula locally on the CI server with the <code>-debug -console -consoleLog</code> options helped. On the CI build server you might get away without this step if all you run locally is the <em>autagent</em> (see below).</p>
<p><span id="more-117"></span></p>
<h2>Specifying a Test</h2>
<p>Jubula comes with quite a good User Manual. For an introduction on how to create your first Jubula test, I’d recommend the excellent <a href="http://jmhofer.johoop.de/?p=97">series of posts by Joachim</a>.</p>
<p>This post assumes that you have a test project name <code>MyTest</code> with a test suite named <code>AboutDialogTest</code> and AUT configuration named <code>Eclipse_Helios</code>.</p>
<p><em>Pitfall</em>: Make sure your test specifies either <em>German (Germany)</em> or <em>English (United States)</em> as the keyboard layout (see <a href="http://help.eclipse.org/indigo/index.jsp?topic=%2Forg.eclipse.jubula.client.ua.help%2Fhtml%2Freference%2Fnode44.html">here</a>). These are the only two keyboard layouts provided out-of-the-box by Jubula at the moment.</p>
<h2>Test Executor</h2>
<p>Running Jubula from the command line is done using the Test Executor (testexec). It’s command line options are documented&nbsp;<a href="http://help.eclipse.org/indigo/index.jsp?topic=%2Forg.eclipse.jubula.client.ua.help%2Fhtml%2Fmanual%2Fnode254.html">here</a>.</p>
<p>If, for example, you’re &nbsp;testing an Eclipse Plugin, your testexec command line would look something like this:</p>
<div><div id="highlighter_841914" class="syntaxhighlighter  bash"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="bash plain">$JUBULA_HOME</code><code class="bash plain">/jubula/testexec</code> <code class="bash plain">-project MyTest -version 1.0 -testsuite AboutDialogTest </code></div><div class="line number2 index1 alt1"><code class="bash plain">-server localhost -port 60000 -autconfig Eclipse_Helios </code></div><div class="line number3 index2 alt2"><code class="bash plain">-datadir $WORKSPACE</code><code class="bash plain">/testdata</code> <code class="bash plain">-resultdir $WORKSPACE</code><code class="bash plain">/testresults</code></div><div class="line number4 index3 alt1"><code class="bash plain">-data </code><code class="bash plain">/home/jenkins/</code><code class="bash plain">.jubula</code><code class="bash plain">/workspace</code></div><div class="line number5 index4 alt2"><code class="bash plain">-language en_US -dbscheme </code><code class="bash string">"Default Embedded (H2)"</code></div><div class="line number6 index5 alt1"><code class="bash plain">-dbuser sa -dbpw </code><code class="bash string">""</code></div></div></td></tr></tbody></table></div></div>
<p>This is using the default embedded database scheme. In a production environment, you’ll typically use a real database that is available to both testers specifying tests and the build server. Available DB schemes are configured in Jubula under&nbsp;<em>Window/Preferences/Test/Database Connections</em>. The <code>-data</code> parameter points to the workspace directory where the database configuration is stored. So you’ll have to either edit this locally on the server, or copy the workspace over to the server to somewhere Jenkins can see it.</p>
<p>The test executor can be configured to either</p>
<ul>
<li>Start a new AUT instance as shown above with the -autconfig parameter</li>
<li>Connect to a running AUT instance that has been started using the -autid parameter</li>
</ul>
<p>You can also pass all these options via a&nbsp;<a href="http://help.eclipse.org/indigo/index.jsp?topic=%2Forg.eclipse.jubula.client.ua.help%2Fhtml%2Fmanual%2Fnode254.html">configuration file</a> instead of command line parameters should you prefer.</p>
<h2>AUT Agent</h2>
<p>Before running the Test Executor, you’ll have to start the AUT Agent (Jubula daemon providing the bridge between the test executor and the Application Under Test) first.</p>
<p>The AUT agent can be started with<br>
</p>
<div><div id="highlighter_161254" class="syntaxhighlighter  bash"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="bash plain">$JUBULA_HOME</code><code class="bash plain">/server/autagent</code> <code class="bash plain">-p 60000 -</code><code class="bash functions">v</code></div></div></td></tr></tbody></table></div></div>
<p></p>
<ul>
<li>-p: Port</li>
<li>-v: Verbose mode</li>
</ul>
<p>As this this an UI test, the agent is started under X11. I haven’t yet explored the possibilities of running the AUT without having an active X11 session. Our CI server has an active X11 session all the time for driving an&nbsp;<a href="https://wiki.jenkins-ci.org/display/JENKINS/eXtreme+Feedback+Panel+Plugin">Extreme Feedback Panel</a> anyways.</p>
<p><em>Pitfall</em>: The AUT agent seems to accept only a single connection at a time, the test executor can’t connect to it while Jubula is still connected to the same AUT Agent.</p>
<h2>Configuring Jenkins</h2>
<h3>1.) Create a new Job</h3>
<p><img title="createjob.png" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/createjob.png" alt="createjob.png" width="512" height="431" border="0"></p>
<h3>2.) Add a step for creating necessary directories, and a step to run testexec</h3>
<p><img title="jubula-jobconfig.png" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/jubula-jobconfig1.png" alt="jubula-jobconfig.png" width="734" height="375" border="0"></p>
<p><em>Note</em>: The shell commands are just provided as an example. In a real job you would most probably replace this with something like an Ant script to prepare the environment, auto-deploy your plugin or the whole RCP application, run the the tests and then check the return code from testexec. Edit: This has been documented <a href="http://devnotesblog.wordpress.com/2011/07/14/eclipse-jubula-automated-test-ant-file/">here</a></p>
<h3>3.) Run the job</h3>
<p><img title="jubula-buildnow.png" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/jubula-buildnow.png" alt="jubula-buildnow.png" width="100" height="32" border="0"></p>
<h3>4.) Check out the results</h3>
<p><img title="jubula-results.png" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/jubula-results.png" alt="jubula-results.png" width="600" height="290" border="0"></p>
<p>The generated HTML report will look something like this:</p>
<p><img title="jubula-report.png" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/jubula-report.png" alt="jubula-report.png" width="486" height="600" border="0"></p>
<h2>Possible Job Improvements</h2>
<ul>
<li>Auto-deploy plugin and/or RCP runtime</li>
<li>Connect to a real database instead of the embedded Jubula instance</li>
<ul>
<li>This is simply a matter of configuring a new database in the workspace pointed to by the <code>-data</code> parameter (see above), and setting the <code>-dbscheme</code> parameter to the name of the DB configuration.</li>
</ul>
<li>Show screenshots taken by Jubula upon test failures directly in the test report</li>
<ul>
<li>This is currently only possible inside Jubula’s test result perspective. Would be nice to have the screenshot embedded into the HTML reports.</li>
</ul>
</ul>

<div class="wpa" style="position: relative; width:300px; text-align: center; padding: 0; margin: 10px auto; overflow: hidden; clear: both;">
<a style="position: absolute; text-align: left; display: block; font: 9px/1 sans-serif; text-decoration: underline;" href="http://en.wordpress.com/about-these-ads/" rel="nofollow">About these ads</a>
<script type="text/javascript">
		var wpcom_adclk_hovering = false;
		var wpcom_adclk_recorded = false;
		var wpcom_adclk_theme = "Twenty Ten";
		var wpcom_adclk_slot = "wpcom_below_post";
		var wpcom_adclk_network = ( typeof wpcom_adclk_network === "undefined" ) ? "" : wpcom_adclk_network ;

		jQuery(document).ready( function() {
			function wpcom_adclk_hover_yes() { wpcom_adclk_hovering = true; }
			function wpcom_adclk_hover_no() { wpcom_adclk_hovering = false; }
			jQuery(".wpa").click(wpcom_adclk_click);
			jQuery(".wpa iframe").hover( wpcom_adclk_hover_yes, wpcom_adclk_hover_no );
			jQuery(".wpa object").hover( wpcom_adclk_hover_yes, wpcom_adclk_hover_no );

			jQuery(window).blur( function() {
				if ( wpcom_adclk_hovering ) { wpcom_adclk_click(); }
			});
		});

		function wpcom_adclk_impression() {
			var stat_gif = document.location.protocol + "//stats.wordpress.com/g.gif?v=wpcom-no-pv";
			stat_gif += "&x_ads_imp_theme=" + wpcom_adclk_theme;
			stat_gif += "&x_ads_imp_placement="+wpcom_adclk_slot;
			stat_gif += "&x_ads_imp_network=" + wpcom_adclk_network;
			stat_gif += "&x_ads_imp_theme_network="+wpcom_adclk_theme+"_"+wpcom_adclk_network;
			new Image().src = stat_gif + "&baba=" + Math.random();
			return true;
		}

		function wpcom_adclk_click() {
			if (wpcom_adclk_recorded) { return true; } // no double counting
			var stat_gif = document.location.protocol + "//stats.wordpress.com/g.gif?v=wpcom-no-pv";
			stat_gif += "&x_ads_click_theme=" + wpcom_adclk_theme;
			stat_gif += "&x_ads_click_placement="+wpcom_adclk_slot;
			stat_gif += "&x_ads_click_network=" + wpcom_adclk_network;
			stat_gif += "&x_ads_click_theme_network="+wpcom_adclk_theme+"_"+wpcom_adclk_network;

			new Image().src = stat_gif + "&baba=" + Math.random();
			wpcom_adclk_recorded = true;
			var now=new Date(); var end=now.getTime()+250;
			while(true){now=new Date();if(now.getTime()>end){break;}}
			return true;
		}
	
if ( typeof GA_googleAddAttr == 'function' ) {
GA_googleAddAttr("AdOpt", "1");
GA_googleAddAttr("Origin", "extsearch");
GA_googleAddAttr("LangId", "1");
GA_googleAddAttr("Domain", "devnotesblog.wordpress.com");
GA_googleAddAttr("BlogId", "21058356");
GA_googleAddAttr("PageURL", "http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/");
GA_googleAddAttr("Tag", "eclipse");
GA_googleAddAttr("Tag", "java");
GA_googleAddAttr("Tag", "jenkins");
GA_googleAddAttr("Tag", "testing");
GA_googleAddAttr("theme_bg", "ffffff");
GA_googleAddAttr("theme_text", "333333");
GA_googleAddAttr("theme_link", "0066cc");
GA_googleAddAttr("theme_border", "cccccc");
GA_googleAddAttr("theme_url", "ff4b33");
GA_googleAddAdSensePageAttr("google_page_url", "http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/");
GA_googleFillSlot("wpcom_below_post");
}
</script><script src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ads"></script><div id="google_ads_div_wpcom_below_post_ad_wrapper">
<div id="google_ads_div_wpcom_below_post_ad_container" style="display:inline-block;"><div id="grv-personalization-16" style="display: block; width: 100%; opacity: 1; height: 250px;"><iframe frameborder="0" scrolling="no" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/w2.htm" style="overflow: hidden; width: 100%; height: 250px; opacity: 1;"></iframe></div>
<script type="text/javascript">
  //<![CDATA[
 function _grc(k){return(document.cookie.match('(^|; )'+k+'=([^;]*)')||0)[2]}
    (function(){
    window.gravityInsightsParams = {
      'type': 'content',
      'site_guid': '361837bc83c4c2cba7b350dff56a564f',
      'user_guid': _grc('grvinsights'),
      'sourceUrl': 'devnotesblog.wordpress.com',
    };
    var b,c,d,e,f,g,h,i;f=(b=!0===gravityInsightsParams.useGravityUserGuid?1:0,e=b?"":gravityInsightsParams.user_guid||(null!=(g=/grvinsights=([^;]+)/.exec(document.cookie))?g[1]:void 0)||"",c=(null!=(h=window.jQuery)?null!=(i=h.fn)?i.jquery:void 0:void 0)||"","http://rma-api.gravity.com/v1/api/intelligence/wl?jq="+c+"&sg="+gravityInsightsParams.site_guid+"&ug="+e+"&ugug="+b+"&pl=16&id=grv-personalization-16&type=iframe");
    window.grvMakeScript=function(j){var a;a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=j;return a};d=document.getElementsByTagName("script")[0];f&&d.parentNode.insertBefore(window.grvMakeScript(f),d);})();
  //]]>
</script>

</div>
</div>

</div>
<style type="text/css">
div.wpa>div { margin-top: 1em; } #google_ads_div_wpcom_below_post_adsafe_ad_container { display: block !important; }
</style>
<script type="text/javascript">
jQuery( window ).load( function() {
    if ( jQuery(".wpa script[src*='virool.com']").length > 0 || jQuery(".wpa script[src*='shareth.ru']").length > 0 || jQuery(".wpa iframe[src*='boomvideo.tv']").length > 0 || jQuery(".wpa iframe[src*='viewablemedia.net']").length > 0 || jQuery(".wpa .sharethrough-placement").length > 0 ) {
        jQuery( '.wpa' ).css( 'width', '400px' );
    }
setTimeout(function(){if(typeof GS_googleAddAdSenseService !== 'function'){new Image().src=document.location.protocol+"//stats.wordpress.com/g.gif?v=wpcom-no-pv&x_noads=adblock&baba="+Math.random()}},100);
} );
</script>
<div id="jp-post-flair" class="sharedaddy sd-like-enabled">
<div id="jp-relatedposts" class="jp-relatedposts" style="display: block;">
	<h3 class="jp-relatedposts-headline"><em>Related</em></h3>
<div class="jp-relatedposts-items jp-relatedposts-items-minimal"><p class="jp-relatedposts-post jp-relatedposts-post0" data-post-id="139" data-post-format="false"><span class="jp-relatedposts-post-title"><a class="jp-relatedposts-post-a" href="http://devnotesblog.wordpress.com/2011/07/14/eclipse-jubula-automated-test-ant-file/" title="Eclipse Jubula Automated Test Ant File

As a followup to my previous post on automating Eclipse Jubula tests with Jenkins, here&#39;s an Ant file that Extracts the target platform (Eclipse in this case) and Jubula&#39;s instrumentation&amp;hellip;" rel="nofollow" data-origin="117" data-position="0">Eclipse Jubula Automated Test Ant File</a></span><span class="jp-relatedposts-post-context">In "Eclipse"</span></p><p class="jp-relatedposts-post jp-relatedposts-post1" data-post-id="67" data-post-format="false"><span class="jp-relatedposts-post-title"><a class="jp-relatedposts-post-a" href="http://devnotesblog.wordpress.com/2011/04/08/eclipse-plugin-for-concordion/" title="Eclipse Plugin for Concordion

I&#39;ve released a new Eclipse Plugin for editing Concordion Specifications. Concordion is a cool integration testing framework, check out the tutorial if you&#39;re new to Concordion. The plugin can be&amp;hellip;" rel="nofollow" data-origin="117" data-position="1">Eclipse Plugin for Concordion</a></span><span class="jp-relatedposts-post-context">In "Concordion"</span></p><p class="jp-relatedposts-post jp-relatedposts-post2" data-post-id="75" data-post-format="false"><span class="jp-relatedposts-post-title"><a class="jp-relatedposts-post-a" href="http://devnotesblog.wordpress.com/2011/04/09/tomcat-not-reloading-vadiin-apps-view-when-running-in-eclipse/" title="Tomcat not reloading Vaadin App&#39;s View when running in Eclipse

Ever had the problem that changes to a Vaadin App&#39;s UI were not reflected in the runtime when running and deploying to a Tomcat in Eclipse, even after reloading the&amp;hellip;" rel="nofollow" data-origin="117" data-position="2">Tomcat not reloading Vaadin App's View when running in Eclipse</a></span><span class="jp-relatedposts-post-context">In "Eclipse"</span></p></div></div></div>											</div><!-- .entry-content -->


					<div class="entry-utility">
												This entry was posted in <a href="http://devnotesblog.wordpress.com/category/eclipse/" title="View all posts in Eclipse" rel="category tag">Eclipse</a>, <a href="http://devnotesblog.wordpress.com/category/java/" title="View all posts in Java" rel="category tag">Java</a>, <a href="http://devnotesblog.wordpress.com/category/jenkins/" title="View all posts in Jenkins" rel="category tag">Jenkins</a>, <a href="http://devnotesblog.wordpress.com/category/testing/" title="View all posts in Testing" rel="category tag">Testing</a>. Bookmark the <a href="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/Automating Eclipse Jubula Tests with Jenkins   Development Notes.htm" title="Permalink to Automating Eclipse Jubula Tests with Jenkins" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://devnotesblog.wordpress.com/2011/05/31/masquerade-service-simulator-0-9-1/" rel="prev"><span class="meta-nav">←</span> Masquerade Service Simulator&nbsp;0.9.1</a></div>
					<div class="nav-next"><a href="http://devnotesblog.wordpress.com/2011/07/14/eclipse-jubula-automated-test-ant-file/" rel="next">Eclipse Jubula Automated Test Ant&nbsp;File <span class="meta-nav">→</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">14 Responses to <em>Automating Eclipse Jubula Tests with&nbsp;Jenkins</em></h3>


			<ol class="commentlist">
					<li class="comment even thread-even depth-1 highlander-comment" id="li-comment-12">
		<div id="comment-12">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/bcdd94b299b0758a16424a3ca12282d5" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-bcdd94b299b0758a16424a3ca12282d5-0">				<cite class="fn"><a href="http://jmhofer.johoop.de/" rel="external nofollow" class="url">Joachim Hofer</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-12">
				2011/06/14 at 19:21</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Great post, thanks. And it nicely complements the tutorial on my blog.<br>
Also, as an idea, you could even publish (and potentially archive) the Jubula test report on Jenkins via the “HTML Publisher Plugin”.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=12#respond" onclick="return addComment.moveForm(&quot;comment-12&quot;, &quot;12&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-mfritschi bypostauthor odd alt depth-2 highlander-comment" id="li-comment-14">
		<div id="comment-14">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/da1177212327e04ac6482430f2fed157" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-da1177212327e04ac6482430f2fed157-0">				<cite class="fn">Matt</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-14">
				2011/06/14 at 21:31</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Thanks for the tip, that plugin looks interesting</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=14#respond" onclick="return addComment.moveForm(&quot;comment-14&quot;, &quot;14&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 highlander-comment" id="li-comment-13">
		<div id="comment-13">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/3355ddeaff17a8f48e00c8f274725d0e" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-3355ddeaff17a8f48e00c8f274725d0e-0">				<cite class="fn">Achim Loerke</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-13">
				2011/06/14 at 19:29</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Just to address the improvements:</p>
<p>Auto-deploy: This is a topic we’ve been pondering for years. We just can’t find a solution which covers every aspect. Maybe it’s time to settle for the 90% solution.</p>
<p>DB: This is mostly a matter of setting up a DB and adding the parameters to the workspace settings. Let us know if the documentation is unclear on this. For users of the Eclipse for Testers package or the Jubula feature: we’ll make a fragment with the DB drivers available on Eclipse Marketplace during this week.</p>
<p>Screenshots: Actually making screenshots on errors is the default behaviour. If an error occurs a screenshot is taken and stored in the database. For the time being you have to use the Jubula client to view the results (including the screen shots9.</p>
<p>- Achim</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=13#respond" onclick="return addComment.moveForm(&quot;comment-13&quot;, &quot;13&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1 highlander-comment" id="li-comment-15">
		<div id="comment-15">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/e3049238cdec97d894f0ebc790787a0e" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-e3049238cdec97d894f0ebc790787a0e-0">				<cite class="fn">Alex Imrie</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-15">
				2011/06/15 at 08:05</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Hi Matt, excellent post, thanks! Screenshots are automatically created on errors, and are saved into the database. You can reopen the test result from the reporting perspective to see the screenshot for each failed step directly in the ITE. If the project is open, then you can look at the specification of the failed module in the project itself. The HTML reports can’t be configured to use the screenshots. Hope that helps!</p>
<p>Alex Imrie</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=15#respond" onclick="return addComment.moveForm(&quot;comment-15&quot;, &quot;15&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 highlander-comment" id="li-comment-19">
		<div id="comment-19">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/c8729524cf15bbbecad793ce0b4cb9b3" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-c8729524cf15bbbecad793ce0b4cb9b3-0">				<cite class="fn">David</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-19">
				2011/07/19 at 10:22</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Thank you for that post, I found some good answers here!</p>
<p>But there’s still a question I have. I’m not sure how I should build my RCP Application with Jenkins to make it ready for a Jubula test. My Application should not include those Jubula Plug-Ins at the end, only for testing. So,  do you have an idea how I could prepare my Application for Jubula? Is it just as easy as copying it to the plugins directory and removing it afterwards?</p>
<p>Additionally, I thought it is necessary to edit the config.ini, but I read your example to do all with ANT and I can’t find anything about that in your code.</p>
<p>Greets,<br>
David</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=19#respond" onclick="return addComment.moveForm(&quot;comment-19&quot;, &quot;19&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-mfritschi bypostauthor odd alt depth-2 highlander-comment" id="li-comment-20">
		<div id="comment-20">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/da1177212327e04ac6482430f2fed157" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-da1177212327e04ac6482430f2fed157-1">				<cite class="fn">Matt</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-20">
				2011/07/19 at 21:46</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Your application does not need to include the plugin, you can simply extract the Jubula plugin into the plugin directory before starting the application for a test run. I was doing this for an Eclipse plugin tested in Eclipse, but I guess with an RCP application it would work more or less the same. In the Ant file example, this is done using</p>
<p><code></code></p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=20#respond" onclick="return addComment.moveForm(&quot;comment-20&quot;, &quot;20&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3 highlander-comment" id="li-comment-21">
		<div id="comment-21">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/c8729524cf15bbbecad793ce0b4cb9b3" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-c8729524cf15bbbecad793ce0b4cb9b3-1">				<cite class="fn">David</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-21">
				2011/07/20 at 11:47</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>No, it doesn’t work if I only extract the Jubula plugin and add it to the plugin directory of my RCP application. I need to edit the configuration/config.ini and your Ant example doesn’t do that.<br>
And I thought this example here describes how to build an RCP application, not just a plugin? The Jubula Help “4.2.2 Setting up an RCP AUT for testing” describes in point three that this configuration/config.ini has to be edited if “org.eclipse.update.configurator@3:start” is not defined. And I’m not sure how to manage that this is the case.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1 highlander-comment" id="li-comment-40">
		<div id="comment-40">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ba2b3cba8fb48e987b282978abf79aba" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-ba2b3cba8fb48e987b282978abf79aba-0">				<cite class="fn">Zhongling</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-40">
				2012/07/02 at 11:35</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Hi Matt, thank you very much for your example. I just want to do the same thing as you did but on a Windows system. I have tried as you said, but it doesn’t work. Do you have an idea about how to do it in Windows? Can you tell me the steps needed?</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=40#respond" onclick="return addComment.moveForm(&quot;comment-40&quot;, &quot;40&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-mfritschi bypostauthor even depth-2 highlander-comment" id="li-comment-41">
		<div id="comment-41">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/da1177212327e04ac6482430f2fed157" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-da1177212327e04ac6482430f2fed157-2">				<cite class="fn"><a href="http://devnotesblog.wordpress.com/" rel="external nofollow" class="url">Matt</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-41">
				2012/07/02 at 19:41</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Hi,</p>
<p>sorry, never tried that. I don’t think there should be much of a difference.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=41#respond" onclick="return addComment.moveForm(&quot;comment-41&quot;, &quot;41&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3 highlander-comment" id="li-comment-42">
		<div id="comment-42">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ba2b3cba8fb48e987b282978abf79aba" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-ba2b3cba8fb48e987b282978abf79aba-1">				<cite class="fn">Zhongling</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-42">
				2012/07/03 at 10:23</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Thank you for your response. I have followed the steps in your example<br>
I created a new job and added three script shells:</p>
<p>(1) rm -rf $WORKSPACE/testresults/*; mkdir -p $WORKSPACE/testdata; mkdir -p $WORKSPACE/testresults<br>
 (2) D:/jubula/server/autagent -p 60000 -v<br>
 (3) D:/jubula/jubula/testexec -project My Third Project -testsuite test2 -server localhost -port 60000 -autconfig Eclipse3 datadir $WORKSPACE/testdata -data /home/jenkins/.jubula/workspace -resultdir $WORKSPACE/testresults -version 1.0 -language en_US -dbscheme “Default Embedded (H2)” -dbuser sa -dbpw “”</p>
<p>But I lance the job and there is a mistake:</p>
<p>Building in workspace D:\Utilisateurs\A534346\.jenkins\jobs\Plugin Test\workspace<br>
 [workspace] $ sh -xe C:\Windows\TEMP\hudson9006745285536089314.sh<br>
 The system cannot find the file specified<br>
 FATAL: L’exécution de la commande a échoué.<br>
 java.io.IOException: Cannot run program “sh” (in directory “D:\Utilisateurs\A534346\.jenkins\jobs\Plugin Test\workspace”): CreateProcess error=2, Le fichier spécifié est introuvable</p>
<p>I have installed Jubula in the disk D and my system is Windows 7. For “/home/jenkins/.jubula/workspace”, I don’t know how to change this configuration. And for the mistake of the test, is it because I just missed some steps?</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 highlander-comment" id="li-comment-52">
		<div id="comment-52">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/c9e03597a5fdc8ab7226fbd2d7ba474e" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-c9e03597a5fdc8ab7226fbd2d7ba474e-0">				<cite class="fn">rsilva</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-52">
				2013/01/23 at 16:23</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Hi all and thank you for this post.<br>
Actually this is not a full integration with Jenkins. It is just firing some command line. Focus on app is necessary and it cannot be processed in foreground like a mvn process. And which is more awkward, app start minimized so you don’t have focus on it and test fails</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=52#respond" onclick="return addComment.moveForm(&quot;comment-52&quot;, &quot;52&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-mfritschi bypostauthor odd alt depth-2 highlander-comment" id="li-comment-53">
		<div id="comment-53">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/da1177212327e04ac6482430f2fed157" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-da1177212327e04ac6482430f2fed157-3">				<cite class="fn"><a href="http://devnotesblog.wordpress.com/" rel="external nofollow" class="url">Matt</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-53">
				2013/01/23 at 16:51</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Hi,</p>
<p>it’s been a while since I’ve tried this so it might require a bit of work to get it to work correctly in newer versions of Jubula. There’s also a post with an example Ant file to further automate tests.</p>
<p>You don’t have to run the UI locally on the build server, the autagent could run for example on a dedicated Jubula test host. Not sure about your minimizing problems, I mever experienced that.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/?replytocom=53#respond" onclick="return addComment.moveForm(&quot;comment-53&quot;, &quot;53&quot;, &quot;respond&quot;, &quot;117&quot;)">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3 highlander-comment" id="li-comment-54">
		<div id="comment-54">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/c9e03597a5fdc8ab7226fbd2d7ba474e" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-c9e03597a5fdc8ab7226fbd2d7ba474e-1">				<cite class="fn">rsilva</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-54">
				2013/01/24 at 19:55</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>when Jenkins launches my app on win 7, I can see my app in toolbar but it opens minized. Then jubula perfoms click here and there hiting whatever is in front or focus. What I understand is jubula performs real click, real events agains real application in the way you lost control of your pc and you can’t have any other application window on top of your AUT. Therefore is not like other jenkins jobs integrated with maven that happens in background, is like a robot using your app.<br>
Anyway this is a cool app though <span class="wp-smiley emoji emoji-smile" title=":)">:)</span></p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt depth-3 highlander-comment" id="li-comment-55">
		<div id="comment-55">
			<div class="comment-author vcard">
				<img alt="" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/f09f0c0f2185470398c05887a3faca51" class="avatar avatar-40 grav-hashed grav-hijack" height="40" width="40" id="grav-f09f0c0f2185470398c05887a3faca51-0">				<cite class="fn">Alex</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-55">
				2013/01/25 at 07:49</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Hi,<br>
If your application isn’t in the foreground / is minimized, then you could have a look at this Jubula forum thread:<br>
<a href="http://www.eclipse.org/forums/index.php/t/238562/" rel="nofollow">http://www.eclipse.org/forums/index.php/t/238562/</a></p>
<p>It covers how to get the right AUT to the front. Could it also be possible that the AUT starting minimized is configurable on your system / for your AUT?</p>
<p>Hope that’s helpful!</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>


	

								<div id="respond" class="comment-respond js">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://devnotesblog.wordpress.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										


												<input type="hidden" id="highlander_comment_nonce" name="highlander_comment_nonce" value="722fc5eb24"><input type="hidden" name="_wp_http_referer" value="/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/">
<input type="hidden" name="hc_post_as" id="hc_post_as" value="guest">

<div class="comment-form-field comment-textarea">
	
	<div id="comment-form-comment"><textarea tabindex="-1" style="position: absolute; top: -999px; left: 0px; right: auto; bottom: auto; border: 0px; padding: 0px; box-sizing: content-box; word-wrap: break-word; overflow: hidden; -webkit-transition: none; transition: none; height: 0px !important; min-height: 0px !important; font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: 14px; font-weight: 400; font-style: normal; letter-spacing: 0px; text-transform: none; text-decoration: none; word-spacing: 0px; text-indent: 0px; line-height: 24px; width: 618px;" class="autosizejs "></textarea><textarea id="comment" name="comment" title="Enter your comment here..." placeholder="Enter your comment here..." style="height: 44px; overflow: hidden; word-wrap: break-word; resize: horizontal;"></textarea></div>
</div>

<div id="comment-form-identity" style="display: none;">

	<div id="comment-form-nascar">
		<p>Fill in your details below or click an icon to log in:</p>
		<ul>
			<li class="selected" style="display:none;">
				<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-form-guest" id="postas-guest" title="Guest">
					<span></span>
				</a>
			</li>
			<li>
				<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-form-load-service:WordPress.com" id="postas-wordpress" title="WordPress.com">
					<span></span>
				</a>
			</li>
			<li>
				<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-form-load-service:Twitter" id="postas-twitter" title="Twitter">
					<span></span>
				</a>
			</li>
			<li>
				<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#comment-form-load-service:Facebook" id="postas-facebook" title="Facebook">
					<span></span>
				</a>
			</li>
			<li>
			<iframe id="googleplus-sign-in" name="googleplus-sign-in" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/saved_resource.htm" width="24" height="24" scrolling="no" allowtransparency="true" seamless="seamless" frameborder="0"></iframe>
			</li>
		</ul>
	</div>

	<div id="comment-form-guest" class="comment-form-service selected">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
<a href="https://gravatar.com/site/signup/" target="_blank">				<img src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ad516503a11cd5ca435acc9bb6523536" alt="Gravatar" width="25" class="no-grav">
</a>			</div>

				<div class="comment-form-fields">
				<div class="comment-form-field comment-form-email">
					<label for="email">Email <span class="required">(required)</span> <span class="nopublish">(Address never made public)</span></label>
					<div class="comment-form-input"><input id="email" name="email" type="email" value=""></div>
				</div>
				<div class="comment-form-field comment-form-author">
					<label for="author">Name <span class="required">(required)</span></label>
					<div class="comment-form-input"><input id="author" name="author" type="text" value=""></div>
				</div>
				<div class="comment-form-field comment-form-url">
					<label for="url">Website</label>
					<div class="comment-form-input"><input id="url" name="url" type="text" value=""></div>
				</div>
			</div>
	
		</div>
	</div>

	<div id="comment-form-wordpress" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/wplogo.png" alt="WordPress.com Logo" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="wp_avatar" id="wordpress-avatar" class="comment-meta-wordpress" value="">
				<input type="hidden" name="wp_user_id" id="wordpress-user_id" class="comment-meta-wordpress" value="">
				<input type="hidden" name="wp_access_token" id="wordpress-access_token" class="comment-meta-wordpress" value="">
				<p class="comment-form-posting-as pa-wordpress"><strong></strong> You are commenting using your WordPress.com account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'wordpress' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-twitter" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ad516503a11cd5ca435acc9bb6523536" alt="Twitter picture" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="twitter_avatar" id="twitter-avatar" class="comment-meta-twitter" value="">
				<input type="hidden" name="twitter_user_id" id="twitter-user_id" class="comment-meta-twitter" value="">
				<input type="hidden" name="twitter_access_token" id="twitter-access_token" class="comment-meta-twitter" value="">
				<p class="comment-form-posting-as pa-twitter"><strong></strong> You are commenting using your Twitter account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'twitter' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-facebook" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ad516503a11cd5ca435acc9bb6523536" alt="Facebook photo" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="fb_avatar" id="facebook-avatar" class="comment-meta-facebook" value="">
				<input type="hidden" name="fb_user_id" id="facebook-user_id" class="comment-meta-facebook" value="">
				<input type="hidden" name="fb_access_token" id="facebook-access_token" class="comment-meta-facebook" value="">
				<p class="comment-form-posting-as pa-facebook"><strong></strong> You are commenting using your Facebook account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'facebook' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-googleplus" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/ad516503a11cd5ca435acc9bb6523536" alt="Google+ photo" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="googleplus_avatar" id="googleplus-avatar" class="comment-meta-googleplus" value="">
				<input type="hidden" name="googleplus_user_id" id="googleplus-user_id" class="comment-meta-googleplus" value="">
				<input type="hidden" name="googleplus_access_token" id="googleplus-access_token" class="comment-meta-googleplus" value="">
				<p class="comment-form-posting-as pa-googleplus"><strong></strong> You are commenting using your Google+ account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'googleplus' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>


	<div id="comment-form-load-service" class="comment-form-service">
		<div class="comment-form-posting-as-cancel"><a href="javascript:HighlanderComments.cancelExternalWindow();">Cancel</a></div>
		<p>Connecting to %s</p>
	</div>

	
</div>

<script type="text/javascript">
var highlander_expando_javascript = function(){
	var input = document.createElement( 'input' ),
	    comment = jQuery( '#comment' );

	if ( 'placeholder' in input ) {
		comment.attr( 'placeholder', jQuery( '.comment-textarea label' ).remove().text() );
	}

	// Expando Mode: start small, then auto-resize on first click + text length
	jQuery( '#comment-form-identity' ).hide();
	jQuery( '#comment-form-subscribe' ).hide();
	jQuery( '#commentform .form-submit' ).hide();

	comment.css( { 'height':'10px' } ).one( 'focus', function() {
		var timer = setInterval( HighlanderComments.resizeCallback, 10 )
		jQuery( this ).animate( { 'height': HighlanderComments.initialHeight } ).delay( 100 ).queue( function(n) { clearInterval( timer ); HighlanderComments.resizeCallback(); n(); } );
		jQuery( '#comment-form-identity' ).slideDown();
		jQuery( '#comment-form-subscribe' ).slideDown();
		jQuery( '#commentform .form-submit' ).slideDown();
	});
}
jQuery(document).ready( highlander_expando_javascript );
</script>

<div id="comment-form-subscribe" style="display: none;">
	<p class="comment-subscription-form"><input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;" tabindex="6"> <label class="subscribe-label" id="subscribe-label" for="subscribe" style="display: inline;">Notify me of follow-up comments via email.</label></p></div>

												<p class="form-submit" style="display: none;">
							<input name="submit" type="submit" id="comment-submit" value="Post Comment">
							<input type="hidden" name="comment_post_ID" value="117" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="5d9a697dc6"></p>
<input type="hidden" name="genseq" value="1399244542">
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/form.js"></script>
<p style="display: none;"></p>					<input type="hidden" id="ak_js" name="ak_js" value="1399244586895"></form>
							</div><!-- #respond -->
			<div style="clear: both"></div>
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
						<ul class="xoxo">

<li id="search-2" class="widget-container widget_search"><form role="search" method="get" id="searchform" class="searchform" action="http://devnotesblog.wordpress.com/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s">
					<input type="submit" id="searchsubmit" value="Search">
				</div>
			</form></li>		<li id="recent-posts-2" class="widget-container widget_recent_entries">		<h3 class="widget-title">Recent Posts</h3>		<ul>
					<li>
				<a href="http://devnotesblog.wordpress.com/2012/01/12/ocz-vertex-plus-ssd-vs-macbook/">OCZ Vertex Plus SSD vs.&nbsp;MacBook</a>
						</li>
					<li>
				<a href="http://devnotesblog.wordpress.com/2011/09/07/scripting-using-jsr-223-in-an-osgi-environment/">Scripting using JSR 223 in an OSGi&nbsp;environment</a>
						</li>
					<li>
				<a href="http://devnotesblog.wordpress.com/2011/09/07/git-http-push-fails-with-error-rpc-failed/">git HTTP push fails with error “RPC&nbsp;failed”</a>
						</li>
					<li>
				<a href="http://devnotesblog.wordpress.com/2011/07/16/maven-check-for-dependecy-and-plugin-updates/">Maven: Check for dependecy and plugin&nbsp;updates</a>
						</li>
					<li>
				<a href="http://devnotesblog.wordpress.com/2011/07/14/eclipse-jubula-automated-test-ant-file/">Eclipse Jubula Automated Test Ant&nbsp;File</a>
						</li>
				</ul>
		</li><li id="archives-2" class="widget-container widget_archive"><h3 class="widget-title">Archives</h3>		<ul>
	<li><a href="http://devnotesblog.wordpress.com/2012/01/">January 2012</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2011/09/">September 2011</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2011/07/">July 2011</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2011/06/">June 2011</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2011/05/">May 2011</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2011/04/">April 2011</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2011/03/">March 2011</a></li>
	<li><a href="http://devnotesblog.wordpress.com/2010/06/">June 2010</a></li>
		</ul>
</li><li id="categories-2" class="widget-container widget_categories"><h3 class="widget-title">Categories</h3>		<ul>
	<li class="cat-item cat-item-32991672"><a href="http://devnotesblog.wordpress.com/category/concordion/" title="View all posts filed under Concordion">Concordion</a>
</li>
	<li class="cat-item cat-item-18466"><a href="http://devnotesblog.wordpress.com/category/eclipse/" title="View all posts filed under Eclipse">Eclipse</a>
</li>
	<li class="cat-item cat-item-209196"><a href="http://devnotesblog.wordpress.com/category/git/" title="View all posts filed under Git">Git</a>
</li>
	<li class="cat-item cat-item-204985"><a href="http://devnotesblog.wordpress.com/category/google-web-toolkit/" title="View all posts filed under Google Web Toolkit">Google Web Toolkit</a>
</li>
	<li class="cat-item cat-item-1017"><a href="http://devnotesblog.wordpress.com/category/java/" title="View all posts filed under Java">Java</a>
</li>
	<li class="cat-item cat-item-351789"><a href="http://devnotesblog.wordpress.com/category/jenkins/" title="View all posts filed under Jenkins">Jenkins</a>
</li>
	<li class="cat-item cat-item-808"><a href="http://devnotesblog.wordpress.com/category/mac/" title="View all posts filed under Mac">Mac</a>
</li>
	<li class="cat-item cat-item-190519"><a href="http://devnotesblog.wordpress.com/category/masquerade/" title="View all posts filed under Masquerade">Masquerade</a>
</li>
	<li class="cat-item cat-item-47862"><a href="http://devnotesblog.wordpress.com/category/maven/" title="View all posts filed under Maven">Maven</a>
</li>
	<li class="cat-item cat-item-5165"><a href="http://devnotesblog.wordpress.com/category/osgi/" title="View all posts filed under OSGi">OSGi</a>
</li>
	<li class="cat-item cat-item-9486"><a href="http://devnotesblog.wordpress.com/category/spring/" title="View all posts filed under Spring">Spring</a>
</li>
	<li class="cat-item cat-item-12"><a href="http://devnotesblog.wordpress.com/category/testing/" title="View all posts filed under Testing">Testing</a>
</li>
	<li class="cat-item cat-item-54815797"><a href="http://devnotesblog.wordpress.com/category/vadiin/" title="View all posts filed under Vadiin">Vadiin</a>
</li>
		</ul>
</li><li id="linkcat-2717" class="widget-container widget_links"><h3 class="widget-title">Link</h3>
	<ul class="xoxo blogroll">
<li><a href="http://code.google.com/p/concordion-eclipse/" rel="me" title="Concordion Eclipse Plugin Project Page at Google Code" target="_blank">Concordion Eclipse Plugin</a></li>

	</ul>
</li>
<li id="meta-2" class="widget-container widget_meta"><h3 class="widget-title">Meta</h3>			<ul>
			<li><a href="http://wordpress.com/signup/?ref=wplogin">Register</a></li>			<li><a href="http://devnotesblog.wordpress.com/wp-login.php">Log in</a></li>
			<li><a href="http://devnotesblog.wordpress.com/feed/" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://devnotesblog.wordpress.com/comments/feed/" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="http://wordpress.com/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.com</a></li>			</ul>
</li>			</ul>
		</div><!-- #primary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://devnotesblog.wordpress.com/" title="Development Notes" rel="home">
					Development Notes				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
				<a href="http://theme.wordpress.com/themes/twentyten/" title="Learn more about this theme">The Twenty Ten Theme</a>.				<a href="http://wordpress.com/?ref=footer_website">Create a free website or blog at WordPress.com</a>.
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/gprofiles.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/wpgroho.js"></script>

	<script>
		//initialize and attach hovercards to all gravatars
		jQuery( document ).ready( function( $ ) {
			Gravatar.profile_cb = function( hash, id ) {
				WPGroHo.syncProfileData( hash, id );
			};
			Gravatar.my_hash = WPGroHo.my_hash;
			Gravatar.init( 'body', '#wp-admin-bar-my-account' );
		});
	</script>

		<div style="display:none">
	<div class="grofile-hash-map-bcdd94b299b0758a16424a3ca12282d5">
	</div>
	<div class="grofile-hash-map-da1177212327e04ac6482430f2fed157">
	</div>
	<div class="grofile-hash-map-3355ddeaff17a8f48e00c8f274725d0e">
	</div>
	<div class="grofile-hash-map-e3049238cdec97d894f0ebc790787a0e">
	</div>
	<div class="grofile-hash-map-c8729524cf15bbbecad793ce0b4cb9b3">
	</div>
	<div class="grofile-hash-map-ba2b3cba8fb48e987b282978abf79aba">
	</div>
	<div class="grofile-hash-map-c9e03597a5fdc8ab7226fbd2d7ba474e">
	</div>
	<div class="grofile-hash-map-f09f0c0f2185470398c05887a3faca51">
	</div>
	</div>
<script type="text/javascript">
/* <![CDATA[ */
var HighlanderComments = {"loggingInText":"Logging In\u2026","submittingText":"Posting Comment\u2026","postCommentText":"Post Comment","connectingToText":"Connecting to %s","commentingAsText":"%1$s: You are commenting using your %2$s account.","logoutText":"Log Out","loginText":"Log In","connectURL":"http:\/\/devnotesblog.wordpress.com\/public.api\/connect\/?action=request","logoutURL":"http:\/\/devnotesblog.wordpress.com\/wp-login.php?action=logout&_wpnonce=05dcf05f89","homeURL":"http:\/\/devnotesblog.wordpress.com\/","postID":"117","gravDefault":"identicon","enterACommentError":"Please enter a comment","enterEmailError":"Please enter your email address here","invalidEmailError":"Invalid email address","enterAuthorError":"Please enter your name here","gravatarFromEmail":"This picture will show whenever you leave a comment. Click to customize it.","logInToExternalAccount":"Log in to use details from one of these accounts.","change":"Change","changeAccount":"Change Account","comment_registration":"0","userIsLoggedIn":"","isJetpack":"0"};
/* ]]> */
</script>
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/saved_resource(2)"></script>

	<div id="bit" class="loggedout-follow-normal" style="bottom: -238px;">
		<a class="bsub" href="javascript:void(0)"><span id="bsub-text">Follow</span></a>
		<div id="bitsubscribe">

					<h3><label for="loggedout-follow-field">Follow “Development Notes”</label></h3>

			<form action="https://subscribe.wordpress.com/" method="post" accept-charset="utf-8" id="loggedout-follow">
			<p>Get every new post delivered to your Inbox.</p>

			<p id="loggedout-follow-error" style="display: none;"></p>

			
			<p><input type="email" name="email" value="Enter your email address" onfocus="this.value=(this.value==&quot;Enter your email address&quot;) ? &quot;&quot; : this.value;" onblur="this.value=(this.value==&quot;&quot;) ? &quot;Enter email address&quot; : this.value;" id="loggedout-follow-field"></p>

			<input type="hidden" name="action" value="subscribe">
			<input type="hidden" name="blog_id" value="21058356">
			<input type="hidden" name="source" value="http://devnotesblog.wordpress.com/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/">
			<input type="hidden" name="sub-type" value="loggedout-follow">

			<input type="hidden" id="_wpnonce" name="_wpnonce" value="cc84a39a03"><input type="hidden" name="_wp_http_referer" value="/2011/06/14/automating-eclipse-jubula-tests-with-jenkins/">
			<p id="bsub-subscribe-button"><input type="submit" value="Sign me up"></p>
			</form>
					<div id="bsub-credit"><a href="http://wordpress.com/signup/?ref=lof">Powered by WordPress.com</a></div>
		</div><!-- #bitsubscribe -->
	</div><!-- #bit -->
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/saved_resource(3)"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?m=1395343499g&amp;ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?m=1363304414g&amp;ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/saved_resource(4)"></script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script><script src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/w.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({'blog':'21058356','v':'wpcom','tz':'2','user_id':'0','post':'117','subd':'devnotesblog'});
ex_go({'crypt':'UE5XaGUuOTlwaD85flAmcm1mcmZsaDhkV11YdTdvUG14Q2VDQTR4LlUsLi82dU1mai9BMm9Fb2hGVnRfN3NfeSxTOENvUD15YS1lM3RdS3ZXU2grLk1jQjFOW2h+JkJuS3Q0NWxkbFlta1dKMCtbWWJxa0FGMW80MCtkcWZHWS1POXc1Qy9wdmRpOHxlNzJrP0dEPVR6NS56bWhkSGUmd1Z4W2NIK1RfTTY0bDVfQlZXK2kyMVVIY2tlTzksRzZad0Y0N11SNzRXPVdPaDA4L0lMUEl+X2xTdjlmY2RGcTZKT2JlT2x5RkFdOGhMLyZ6Q0lTZS9fbjh+JV8/TGc3bDVdMjJkLGdtM3IrLl1ZPWUyV2R+S2I9LWk2ZVhFcVoraEVrSkJvZzUtQlhMUEdYQkE1S3lib1M='});
addLoadEvent(function(){linktracker_init('21058356',117);});
	</script><img id="wpstats" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/g.gif" alt=""><img id="wpstats2" src="./Automating Eclipse Jubula Tests with Jenkins   Development Notes_files/g(1).gif" alt="" style="display:none">
<noscript>&lt;img src="http://stats.wordpress.com/b.gif?v=noscript" style="height:0px;width:0px;overflow:hidden" alt="" /&gt;</noscript>
<script>
if ( 'object' === typeof wpcom_mobile_user_agent_info ) {

	wpcom_mobile_user_agent_info.init();
	var mobileStatsQueryString = "";
	
	if( false !== wpcom_mobile_user_agent_info.matchedPlatformName )
		mobileStatsQueryString += "&x_" + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
	
	if( false !== wpcom_mobile_user_agent_info.matchedUserAgentName )
		mobileStatsQueryString += "&x_" + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
	
	if( wpcom_mobile_user_agent_info.isIPad() )
		mobileStatsQueryString += "&x_" + 'ipad_views' + '=' + 'views';

	if( "" != mobileStatsQueryString ) {
		new Image().src = document.location.protocol + '//stats.wordpress.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
	}
	
}
</script>

<iframe id="google_osd_static_frame_4948502916377" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;"></iframe></body></html>